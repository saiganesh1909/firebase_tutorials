Xml Code:
<?xml version="1.0" encoding="utf-8"?>

<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:background="@drawable/background"

    tools:context=".SignUpActivity">

    <androidx.appcompat.widget.Toolbar
        android:id="@+id/singup_toolbar"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"

        android:background="#262b39">

        <ImageView
            android:id="@+id/login_logo"

            android:layout_width="100dp"
            android:layout_height="60dp"
            android:contentDescription="@string/contentdiscription"
            android:src="@drawable/white_logo"
            android:transitionName="logo_image"

            />
    </androidx.appcompat.widget.Toolbar>

    <ScrollView
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"

        android:orientation="vertical">




        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:fontFamily="@font/bungee_regular"
            android:text="@string/signup"
            android:textSize="40sp"
            android:textColor="@color/colorAccen"
            tools:contentDescription="ignore"
            />


        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical">


            <com.google.android.material.textfield.TextInputLayout
                android:id="@+id/signup_email"
                style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:inputType="textEmailAddress"
                android:hint="@string/hint1">

                <com.google.android.material.textfield.TextInputEditText
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:inputType="textEmailAddress" />
            </com.google.android.material.textfield.TextInputLayout>


            <com.google.android.material.textfield.TextInputLayout
                android:id="@+id/signup_password"
                style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"

                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginTop="20dp"
                android:hint="@string/hint2"

                app:passwordToggleEnabled="true">

                <com.google.android.material.textfield.TextInputEditText
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="20dp"
                    android:inputType="textPassword" />
            </com.google.android.material.textfield.TextInputLayout>
            <com.google.android.material.textfield.TextInputLayout
                android:id="@+id/signup_confirm_password"
                style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"

                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginTop="20dp"
                android:hint="@string/hint3"

                app:passwordToggleEnabled="true">

                <com.google.android.material.textfield.TextInputEditText
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="20dp"
                    android:inputType="textPassword" />
            </com.google.android.material.textfield.TextInputLayout>


            <ProgressBar
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center"
                android:background="@color/background"
                android:id="@+id/progress_bar_signup"
                android:visibility="invisible"
                />
            <com.google.android.material.button.MaterialButton
                android:id="@+id/signup_signup"
                android:layout_width="150dp"
                android:layout_height="wrap_content"
                android:layout_gravity="center"
                android:layout_margin="20dp"
                app:shapeAppearance="@drawable/login_button"
                app:cornerRadius="20dp"
                android:background="@drawable/login_button"
                android:text="@string/signup"
                android:fontFamily="@font/bungee_regular"
                android:textAppearance="@style/TextStyle"
                 />
            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@string/orwith"
                android:layout_gravity="center"
                />


            <com.google.android.gms.common.SignInButton
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="20dp"
                android:id="@+id/signup_google"
                android:layout_gravity="center"
                />


        </LinearLayout>
    </LinearLayout>
</ScrollView>
</LinearLayout>

Java Code:

package com.sample.magicaltunes;

import android.content.Intent;
import android.os.Bundle;
import android.util.Patterns;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.ProgressBar;
import android.widget.Toast;
//import android.widget.Toolbar;

import androidx.annotation.NonNull;

import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

import com.google.android.gms.auth.api.signin.GoogleSignIn;
import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
import com.google.android.gms.auth.api.signin.GoogleSignInClient;
import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
import com.google.android.gms.common.SignInButton;
import com.google.android.gms.common.api.ApiException;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import com.google.firebase.auth.AuthCredential;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.GoogleAuthProvider;

import androidx.appcompat.widget.Toolbar;

import java.util.Objects;
import java.util.regex.Pattern;

public class SignUpActivity extends AppCompatActivity {
    private FirebaseAuth mauth;
    private int RESULT_CODE=1909;
    //private int RESULT_CANCEL=9091;
    private ProgressBar mprogressbar;
    private TextInputLayout memail, mpassword, mconfirmpassword;
    MaterialButton msingup;
    SignInButton signInButton;
    private GoogleSignInClient googleSignInClient;
   // private String TAG="SignUpActivity";
    private static final Pattern PASSWORD_PATTERN =
            Pattern.compile("^" +
                    "(?=.*[0-9])" +         //at least 1 digit
                    "(?=.*[a-z])" +         //at least 1 lower case letter
                    "(?=.*[A-Z])" +         //at least 1 upper case letter
                    //"(?=.*[a-zA-Z])" +      //any letter
                    "(?=.*[@#$%^&+=])" +    //at least 1 special character
                    "(?=\\S+$)" +           //no white spaces
                    ".{8,}" +               //at least 8 characters
                    "$");

    @Override
    protected void onStart() {
        super.onStart();
        Home home=new Home(SignUpActivity.this);
        String useremail= home.getSession();
        if(!useremail.equals("app")){
            //mprogressbar.setVisibility(View.VISIBLE);
            Intent intent=new Intent(SignUpActivity.this,MainActivity2.class);
            intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK );
            startActivity(intent);
            // mprogressbar.setVisibility(View.GONE);

        }
        else {
            //do nothing;
        }
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_sign_up);
        //if (getSupportActionBar() != null) {
       //     getSupportActionBar().hide();
       // }
        //getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
        Toolbar toolbar=findViewById(R.id.singup_toolbar);
        toolbar.setTitle("");
        //toolbar.collapseActionView();
        //toolbar.getContentInsetLeft();
        setSupportActionBar(toolbar);
        Objects.requireNonNull(getSupportActionBar()).setDisplayHomeAsUpEnabled(true);
        getSupportActionBar().setDisplayShowHomeEnabled(true);

        memail = findViewById(R.id.signup_email);
        mpassword = findViewById(R.id.signup_password);
        mconfirmpassword = findViewById(R.id.signup_confirm_password);
        msingup = findViewById(R.id.signup_signup);
        signInButton=findViewById(R.id.signup_google);
        mprogressbar=findViewById(R.id.progress_bar_signup);
        mauth=FirebaseAuth.getInstance();

        msingup.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
              //  mprogressbar.setVisibility(View.VISIBLE);
                if(confirminputsignup()){
                    mprogressbar.setVisibility(View.VISIBLE);

                    Toast.makeText(SignUpActivity.this,"true",Toast.LENGTH_SHORT).show();
                   mauth.createUserWithEmailAndPassword(Objects.requireNonNull(memail.getEditText()).getText().toString(), Objects.requireNonNull(mpassword.getEditText()).getText().   toString())
                           .addOnCompleteListener(SignUpActivity.this, new OnCompleteListener<AuthResult>() {
                               @Override
                               public void onComplete(@NonNull Task<AuthResult> task) {
                                   if(task.isSuccessful()){
                                       mprogressbar.setVisibility(View.GONE);
                                       Toast.makeText(SignUpActivity.this,"Your Account has been created",Toast.LENGTH_LONG).show();
                                      // mprogressbar.setVisibility(View.GONE);
                                       Intent intent=new Intent(SignUpActivity.this,LoginActivity.class);
                                       startActivity(intent);
                                       memail.getEditText().setText("");
                                       mpassword.getEditText().setText("");
                                       Objects.requireNonNull(mconfirmpassword.getEditText()).setText("");
                                   }
                                   else {
                                       Toast.makeText(SignUpActivity.this, Objects.requireNonNull(task.getException()).getMessage(),Toast.LENGTH_LONG).show();
                                   }

                               }
                           });

                }
                else {
                    Toast.makeText(SignUpActivity.this,"false",Toast.LENGTH_SHORT).show();


                }
            }
        });
        GoogleSignInOptions gso=new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                .requestIdToken(getString(R.string.default_web_client_id))
                .requestEmail()
                .build();
        googleSignInClient= GoogleSignIn.getClient(SignUpActivity.this,gso);
        signInButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
               // mprogressbar.setVisibility(View.VISIBLE);
                signIn();
            }
        });


    }
    private void signIn(){
       // mprogressbar.setVisibility(View.GONE);
        Intent signinIntent=googleSignInClient.getSignInIntent();
        startActivityForResult(signinIntent,RESULT_CODE);

    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if(requestCode==RESULT_CODE){
            Task<GoogleSignInAccount> task=GoogleSignIn.getSignedInAccountFromIntent(data);
            handlesigninResult(task);
        }
    }

    private void handlesigninResult(Task<GoogleSignInAccount> competetask){
        try{
            GoogleSignInAccount acc=competetask.getResult(ApiException.class);
            Toast.makeText(SignUpActivity.this,"SignIn Sucessful",Toast.LENGTH_LONG).show();
            //assert acc != null;
            assert acc != null;
            FirebaeGoogleAuth(acc);
        }
        catch (ApiException e){
            Toast.makeText(SignUpActivity.this,"SignIn UnSucessful",Toast.LENGTH_LONG).show();
//          FirebaeGoogleAuth(null);

        }

    }
    private void FirebaeGoogleAuth(GoogleSignInAccount acct){
        mprogressbar.setVisibility(View.VISIBLE);
        final AuthCredential authCredential= GoogleAuthProvider.getCredential(acct.getIdToken(),null);
        mauth.signInWithCredential(authCredential).addOnCompleteListener(SignUpActivity.this, new OnCompleteListener<AuthResult>() {
            @Override
            public void onComplete(@NonNull Task<AuthResult> task) {
                if(task.isSuccessful()){
                    User1 user=new User1(authCredential.toString());
                    Home home=new Home(SignUpActivity.this);
                    home.saveSession(user);
                   // Toast.makeText(SignUpActivity.this,"sucessful",Toast.LENGTH_LONG).show();

                    Intent intent=new Intent(SignUpActivity.this,MainActivity2.class);
                    startActivity(intent);
                    mprogressbar.setVisibility(View.GONE);

                }
                else {
                    Toast.makeText(SignUpActivity.this,"unsucessful",Toast.LENGTH_LONG).show();


                }
            }
        });
    }
    @Override
    public boolean onOptionsItemSelected(@NonNull MenuItem item) {
        if(item.getItemId()==android.R.id.home){
            finish();
        }
        return super.onOptionsItemSelected(item);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater menuInflater=getMenuInflater();
        menuInflater.inflate(R.menu.logo_menu,menu);
        return true;
    }

    private boolean validateEmail() {
        String emailInput = Objects.requireNonNull(memail.getEditText()).getText().toString().trim();
        if (emailInput.isEmpty()) {
            memail.setError("Field can't be empty");
            return false;
        } else if (!Patterns.EMAIL_ADDRESS.matcher(emailInput).matches()) {
            memail.setError("Please Enter A Valid Email Adress");
            return false;

        } else {
            memail.setError(null);
            return true;

        }

    }

    private boolean ConfirmPassword() {
        String passwordInput = Objects.requireNonNull(mconfirmpassword.getEditText()).getText().toString().trim();
        if (passwordInput.isEmpty()) {
            mconfirmpassword.setError("Field can't be empty");
            return false;
        }
        else if (!PASSWORD_PATTERN.matcher(passwordInput).matches()) {
            mconfirmpassword.setError("Password Too Weak");
            return false;

        }
        else {
            mconfirmpassword.setError(null);
            return true;

        }

    }

    private boolean validatePassword() {
        String passwordInput = Objects.requireNonNull(mpassword.getEditText()).getText().toString().trim();
        if (passwordInput.isEmpty()) {
            mpassword.setError("Field can't be empty");
            return false;
        } else if (!PASSWORD_PATTERN.matcher(passwordInput).matches()) {
            mpassword.setError("Password Too Weak");
            return false;


        } else {
            mpassword.setError(null);
            return true;

        }


    }
   /* private boolean PasswordConfirmPasswordSame(){
        String password= Objects.requireNonNull(mpassword.getEditText()).getText().toString();
        String confirmpassword= Objects.requireNonNull(mconfirmpassword.getEditText()).getText().toString();
        if((password.length()!=confirmpassword.length()) || (password!=confirmpassword)){
            mconfirmpassword.setError("Password's must be same");
            return false;
        }
        else{
        return true;}
    }*/


    public boolean confirminputsignup() {

        return !(!validateEmail() | (!validatePassword()) | (!ConfirmPassword()));
        //String input = "Emial:" + memail.getEditText().getText().toString().trim();
        // input += "\n";
        // input = "password" + mpassword.getEditText().getText().toString().trim();

        //Toast.makeText(SignUp.this,input,Toast.LENGTH_SHORT).show();
    }

}
