Xml file:

<?xml version="1.0" encoding="utf-8"?>

<ScrollView
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:background="@drawable/background"

    tools:context=".LoginActivity">
<LinearLayout
    android:layout_width="match_parent"
    android:layout_height="wrap_content"

    android:orientation="vertical">
    <ImageView
    android:contentDescription="@string/contentdiscription"
    android:layout_width="100dp"
    android:layout_height="100dp"
    android:src="@drawable/white_logo"
    android:id="@+id/login_logo"
    android:transitionName="logo_image"

    />

    <TextView
        android:id="@+id/login_textview"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:fontFamily="@font/bungee_regular"
        android:text="@string/welcome"
        android:textSize="40sp"
        android:textColor="@color/colorAccen"
        tools:contentDescription="ignore"
        />


    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical">


        <com.google.android.material.textfield.TextInputLayout
            android:id="@+id/login_email"
            style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="@string/hint1">

            <com.google.android.material.textfield.TextInputEditText
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:inputType="textEmailAddress" />
        </com.google.android.material.textfield.TextInputLayout>

        <com.google.android.material.textfield.TextInputLayout
            android:id="@+id/login_password"
            style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"

            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:hint="@string/hint2"

            app:passwordToggleEnabled="true">

            <com.google.android.material.textfield.TextInputEditText
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginTop="20dp"
                android:inputType="textPassword" />
        </com.google.android.material.textfield.TextInputLayout>


        <com.google.android.material.button.MaterialButton
            android:id="@+id/login_forget_password"
            android:layout_width="200dp"
            android:layout_height="wrap_content"
            android:layout_gravity="end"
            app:backgroundTint="#262b39"
            android:text="@string/forgetpassword"
            android:textColor="#ffffff"


            />

     <com.google.android.material.button.MaterialButton
         android:id="@+id/login_login"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_gravity="center"
         android:layout_margin="20dp"
         app:shapeAppearance="@drawable/login_button"
         app:cornerRadius="20dp"
          android:background="@drawable/login_button"
         android:text="@string/login"
         android:fontFamily="@font/bungee_regular"
         android:textAppearance="@style/TextStyle"
         />

        <ProgressBar
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="center"
            android:background="@color/background"
            android:id="@+id/progress_bar_login"
            android:visibility="invisible"
            />
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/or"
            android:layout_gravity="center"

            />
       
        <com.google.android.material.button.MaterialButton
            android:id="@+id/login_signup"
            android:layout_width="match_parent"
            android:layout_height="50dp"
            android:textAlignment="center"
            android:paddingTop="0dp"
            android:layout_gravity="center"
            android:layout_margin="20dp"
            app:shapeAppearance="@drawable/login_button"
            app:cornerRadius="10dp"
            android:background="@drawable/login_button"
            android:text="@string/signup"
            android:fontFamily="@font/bungee_regular"
            android:textAppearance="@style/TextStyle"
            />


    </LinearLayout>
</LinearLayout>
</ScrollView>


Java Code:

package com.sample.magicaltunes;

import android.content.Intent;
import android.os.Bundle;
import android.util.Patterns;
import android.view.View;
import android.view.WindowManager;
import android.widget.ProgressBar;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;

import java.util.Objects;

public class LoginActivity extends AppCompatActivity {
     ProgressBar mprogressbar;
    private TextInputLayout memail, mpassword;
    MaterialButton mlogin, msignup, mforgetpassword;
    private FirebaseAuth mauth;


    @Override
    protected void onStart() {
        super.onStart();
        Home home=new Home(LoginActivity.this);
       String useremail= home.getSession();
       if(!useremail.equals("app")){
           //mprogressbar.setVisibility(View.VISIBLE);
           Intent intent=new Intent(LoginActivity.this,MainActivity2.class);
           intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK );
           startActivity(intent);
          // mprogressbar.setVisibility(View.GONE);

       }
       else {
            //do nothing;
       }

    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.login);
        if (getSupportActionBar() != null) {
            getSupportActionBar().hide();
        }
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
        memail = findViewById(R.id.login_email);
        mpassword = findViewById(R.id.login_password);
        mforgetpassword = findViewById(R.id.login_forget_password);
        mlogin = findViewById(R.id.login_login);
        msignup = findViewById(R.id.login_signup);
        mprogressbar=findViewById(R.id.progress_bar_login);
        mauth=FirebaseAuth.getInstance();
        mforgetpassword.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent=new Intent(LoginActivity.this,ResetPasswod.class);
                startActivity(intent);
            }
        });


        msignup.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent=new Intent(LoginActivity.this,SignUpActivity.class);
                startActivity(intent);
            }
        });
        mlogin.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                //mprogressbar.setVisibility(View.VISIBLE);
                if(confirminput()){
                    //Toast.makeText(LoginActivity.this,"login sucess",Toast.LENGTH_SHORT).show();
                    mprogressbar.setVisibility(View.VISIBLE);
                    mauth.signInWithEmailAndPassword(Objects.requireNonNull(memail.getEditText()).getText().toString(), Objects.requireNonNull(mpassword.getEditText()).getText().toString())
                            .addOnCompleteListener(LoginActivity.this, new OnCompleteListener<AuthResult>() {
                                @Override
                                public void onComplete(@NonNull Task<AuthResult> task) {
                                    if(task.isSuccessful()){
                                        mprogressbar.setVisibility(View.GONE);
                                        User user=new User(memail.getEditText().getText().toString(),mpassword.getEditText().getText().toString());
                                        Home home=new Home(LoginActivity.this);
                                        home.saveSession(user);

                                        Toast.makeText(LoginActivity.this,"login sucessful",Toast.LENGTH_LONG).show();
                                        Intent intent=new Intent(LoginActivity.this,MainActivity2.class);
                                        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK );
                                        startActivity(intent);
                                        memail.getEditText().setText("");
                                        mpassword.getEditText().setText("");


                                    }
                                    else {
                                        mpassword.setError("Please enter valid password");


                                    }
                                }
                            });


                }
                else {
                    Toast.makeText(LoginActivity.this,"login failed",Toast.LENGTH_SHORT).show();

                }

            }
        });

    }




    private boolean validateEmail() {
        String emailInput = Objects.requireNonNull(memail.getEditText()).getText().toString().trim();
        if (emailInput.isEmpty()) {
            memail.setError("Field can't be empty");
            return false;
        } else if (!Patterns.EMAIL_ADDRESS.matcher(emailInput).matches()) {
            memail.setError("Please Enter A Valid Email Adress");
            return false;

        } else {
            memail.setError(null);
            return true;

        }

    }

    private boolean validatePassword() {
        String passwordInput = Objects.requireNonNull(mpassword.getEditText()).getText().toString().trim();
        if (passwordInput.isEmpty()) {
            mpassword.setError("Field can't be empty");
            return false;
        } else {
            mpassword.setError(null);
            return true;

        }

    }

    public boolean confirminput() {
        return !(!validateEmail() | (!validatePassword()));

        //String input = "Emial:" + memail.getEditText().getText().toString().trim();
       // input += "\n";
       // input = "password" + mpassword.getEditText().getText().toString().trim();

        //Toast.makeText(SignUp.this,input,Toast.LENGTH_SHORT).show();
    }
}
